"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[83649],{38610:(e,t,n)=>{n.d(t,{Z:()=>r});var o=n(67294),a=n(44996);const r=e=>o.createElement("div",null,o.createElement("p",{align:"center"},o.createElement("figure",null,o.createElement("img",{style:{width:e.width},alt:e.alt,src:(0,a.Z)(e.source)}),o.createElement("figcaption",{class:"image-caption",style:{fontStyle:"italic",opacity:.6,fontSize:"0.9rem"}},e.caption))))},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(67294),a=n(86010);const r={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,s),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>b});var o=n(87462),a=n(67294),r=n(86010),s=n(12466),i=n(16550),l=n(91980),u=n(67392),p=n(50012);function h(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:o,default:a}}=e;return{value:t,label:n,attributes:o,default:a}}))}function c(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??h(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:n}=e;const o=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(o.location.search);t.set(r,e),o.replace({...o.location,search:t.toString()})}),[r,o])]}function d(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,r=c(e),[s,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const o=n.find((e=>e.default))??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:r}))),[l,u]=k({queryString:n,groupId:o}),[h,d]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,r]=(0,p.Nk)(n);return[o,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:o}),g=(()=>{const e=l??h;return m({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),d(e)}),[u,d,r]),tabValues:r}}var g=n(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function N(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:h}=(0,s.o5)(),c=e=>{const t=e.currentTarget,n=p.indexOf(t),o=u[n].value;o!==i&&(h(t),l(o))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:s}=e;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:c},s,{className:(0,r.Z)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:o}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==o}))))}function y(e){const t=d(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",f.tabList)},a.createElement(N,(0,o.Z)({},e,t)),a.createElement(v,(0,o.Z)({},e,t)))}function b(e){const t=(0,g.Z)();return a.createElement(y,(0,o.Z)({key:String(t)},e))}},46300:(e,t,n)=>{n.d(t,{Z:()=>r});var o=n(67294),a=n(50012);function r(e){let{path:t}=e;const[n]=(0,a.Nk)("docusaurus.tab.js-ts"),r=t.lastIndexOf("{"),s=t.slice(r+1,t.length-1),[i,l]=s.split(","),u=t.slice(0,r);return o.createElement("code",null,u+("js"===n?i:l))}},48863:(e,t,n)=>{n.d(t,{A:()=>s,v:()=>i});var o=n(67294),a=n(50012),r=n(49875);function s(e){let{children:t}=e;const[n]=(0,a.Nk)("docusaurus.tab.js-ts");return"ts"===n&&o.createElement(r.Z,null,t)}function i(e){let{children:t}=e;const[n]=(0,a.Nk)("docusaurus.tab.js-ts");return"js"===n&&o.createElement(r.Z,null,t)}},81304:(e,t,n)=>{n.d(t,{Nl:()=>l,f3:()=>i,ge:()=>s,p5:()=>p,xQ:()=>h,xS:()=>u});var o=n(67294),a=n(39960);function r(e){let{children:t,linkToPage:n,style:r={}}=e;return o.createElement(a.Z,{to:n,style:{padding:"0.1rem 0.5rem",borderRadius:"0.375rem",color:"var(--auth-pills-color)",textDecoration:"none",display:"inline-block",...r}},t)}function s(){return o.createElement(r,{style:{backgroundColor:"var(--auth-pills-email)"},linkToPage:"/docs/auth/email"},"Email")}function i(){return o.createElement(r,{style:{backgroundColor:"var(--auth-pills-username-and-pass)"},linkToPage:"/docs/auth/username-and-pass"},"Username & Password")}function l(){return o.createElement(r,{style:{backgroundColor:"var(--auth-pills-discord)"},linkToPage:"/docs/auth/social-auth/discord"},"Discord")}function u(){return o.createElement(r,{style:{backgroundColor:"var(--auth-pills-github)"},linkToPage:"/docs/auth/social-auth/github"},"Github")}function p(){return o.createElement(r,{style:{backgroundColor:"var(--auth-pills-google)"},linkToPage:"/docs/auth/social-auth/google"},"Google")}function h(){return o.createElement(r,{style:{backgroundColor:"var(--auth-pills-keycloak)"},linkToPage:"/docs/auth/social-auth/keycloak"},"Keycloak")}},63865:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>h,default:()=>f,frontMatter:()=>p,metadata:()=>c,toc:()=>k});var o=n(87462),a=(n(67294),n(3905)),r=(n(46300),n(85162)),s=n(74866),i=n(81304),l=n(38610),u=n(48863);const p={title:"Auth Hooks"},h=void 0,c={unversionedId:"auth/auth-hooks",id:"version-0.14.0/auth/auth-hooks",title:"Auth Hooks",description:'Auth hooks allow you to "hook into" the auth process at various stages and run your custom code. For example, if you want to forbid certain emails from signing up, or if you wish to send a welcome email to the user after they sign up, auth hooks are the way to go.',source:"@site/versioned_docs/version-0.14.0/auth/auth-hooks.md",sourceDirName:"auth",slug:"/auth/auth-hooks",permalink:"/docs/auth/auth-hooks",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/release/web/versioned_docs/version-0.14.0/auth/auth-hooks.md",tags:[],version:"0.14.0",frontMatter:{title:"Auth Hooks"},sidebar:"docs",previous:{title:"Accessing User Data",permalink:"/docs/auth/entities/"},next:{title:"Starter Templates",permalink:"/docs/project/starter-templates"}},m={},k=[{value:"Supported hooks",id:"supported-hooks",level:2},{value:"Using hooks",id:"using-hooks",level:2},{value:"Executing code before the user signs up",id:"executing-code-before-the-user-signs-up",level:3},{value:"Executing code after the user signs up",id:"executing-code-after-the-user-signs-up",level:3},{value:"Executing code before the OAuth redirect",id:"executing-code-before-the-oauth-redirect",level:3},{value:"Executing code before the user logs in",id:"executing-code-before-the-user-logs-in",level:3},{value:"Executing code after the user logs in",id:"executing-code-after-the-user-logs-in",level:3},{value:"Refreshing the OAuth access token",id:"refreshing-the-oauth-access-token",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Common hook input",id:"common-hook-input",level:3},{value:"The <code>onBeforeSignup</code> hook",id:"the-onbeforesignup-hook",level:3},{value:"The <code>onAfterSignup</code> hook",id:"the-onaftersignup-hook",level:3},{value:"The <code>onBeforeOAuthRedirect</code> hook",id:"the-onbeforeoauthredirect-hook",level:3},{value:"The <code>onBeforeLogin</code> hook",id:"the-onbeforelogin-hook",level:3},{value:"The <code>onAfterLogin</code> hook",id:"the-onafterlogin-hook",level:3},{value:"ProviderId fields",id:"providerid-fields",level:3},{value:"OAuth fields",id:"oauth-fields",level:3}],d={toc:k},g="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(g,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'Auth hooks allow you to "hook into" the auth process at various stages and run your custom code. For example, if you want to forbid certain emails from signing up, or if you wish to send a welcome email to the user after they sign up, auth hooks are the way to go.'),(0,a.kt)("h2",{id:"supported-hooks"},"Supported hooks"),(0,a.kt)("p",null,"The following auth hooks are available in Wasp:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#executing-code-before-the-user-signs-up"},(0,a.kt)("inlineCode",{parentName:"a"},"onBeforeSignup"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#executing-code-after-the-user-signs-up"},(0,a.kt)("inlineCode",{parentName:"a"},"onAfterSignup"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#executing-code-before-the-oauth-redirect"},(0,a.kt)("inlineCode",{parentName:"a"},"onBeforeOAuthRedirect"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#executing-code-before-the-user-logs-in"},(0,a.kt)("inlineCode",{parentName:"a"},"onBeforeLogin"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#executing-code-after-the-user-logs-in"},(0,a.kt)("inlineCode",{parentName:"a"},"onAfterLogin")))),(0,a.kt)("p",null,"We'll go through each of these hooks in detail. But first, let's see how the hooks fit into the auth flows:"),(0,a.kt)(l.Z,{source:"/img/auth-hooks/signup_flow_with_hooks.png",alt:"Signup Flow with Hooks",caption:"Signup Flow with Hooks",mdxType:"ImgWithCaption"}),(0,a.kt)(l.Z,{source:"/img/auth-hooks/login_flow_with_hooks.png",alt:"Login Flow with Hooks",caption:"Login Flow with Hooks *",mdxType:"ImgWithCaption"}),(0,a.kt)("small",null,(0,a.kt)("p",null,"*"," When using the OAuth auth providers, the login hooks are both called before the session is created but the session is created quickly afterward, so it shouldn't make any difference in practice.")),(0,a.kt)("p",null,"If you are using OAuth, the flow includes extra steps before the auth flow:"),(0,a.kt)(l.Z,{source:"/img/auth-hooks/oauth_flow_with_hooks.png",alt:"OAuth Flow with Hooks",caption:"OAuth Flow with Hooks",mdxType:"ImgWithCaption"}),(0,a.kt)("h2",{id:"using-hooks"},"Using hooks"),(0,a.kt)("p",null,"To use auth hooks, you must first declare them in the Wasp file:"),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp"},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  auth: {\n    userEntity: User,\n    methods: {\n      ...\n    },\n    onBeforeSignup: import { onBeforeSignup } from "@src/auth/hooks",\n    onAfterSignup: import { onAfterSignup } from "@src/auth/hooks",\n    onBeforeOAuthRedirect: import { onBeforeOAuthRedirect } from "@src/auth/hooks",\n    onBeforeLogin: import { onBeforeLogin } from "@src/auth/hooks",\n    onAfterLogin: import { onAfterLogin } from "@src/auth/hooks",\n  },\n}\n'))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp"},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  auth: {\n    userEntity: User,\n    methods: {\n      ...\n    },\n    onBeforeSignup: import { onBeforeSignup } from "@src/auth/hooks",\n    onAfterSignup: import { onAfterSignup } from "@src/auth/hooks",\n    onBeforeOAuthRedirect: import { onBeforeOAuthRedirect } from "@src/auth/hooks",\n    onBeforeLogin: import { onBeforeLogin } from "@src/auth/hooks",\n    onAfterLogin: import { onAfterLogin } from "@src/auth/hooks",\n  },\n}\n')))),(0,a.kt)("p",null,"If the hooks are defined as async functions, Wasp ",(0,a.kt)("em",{parentName:"p"},"awaits")," them. This means the auth process waits for the hooks to finish before continuing."),(0,a.kt)("p",null,"Wasp ignores the hooks' return values. The only exception is the ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeOAuthRedirect")," hook, whose return value affects the OAuth redirect URL."),(0,a.kt)("p",null,"We'll now go through each of the available hooks."),(0,a.kt)("h3",{id:"executing-code-before-the-user-signs-up"},"Executing code before the user signs up"),(0,a.kt)("p",null,"Wasp calls the ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeSignup")," hook before the user is created."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeSignup")," hook can be useful if you want to reject a user based on some criteria before they sign up."),(0,a.kt)("p",null,"Works with ",(0,a.kt)(i.ge,{mdxType:"EmailPill"})," ",(0,a.kt)(i.f3,{mdxType:"UsernameAndPasswordPill"})," ",(0,a.kt)(i.Nl,{mdxType:"DiscordPill"})," ",(0,a.kt)(i.xS,{mdxType:"GithubPill"})," ",(0,a.kt)(i.p5,{mdxType:"GooglePill"})," ",(0,a.kt)(i.xQ,{mdxType:"KeycloakPill"})),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onBeforeSignup: import { onBeforeSignup } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"import { HttpError } from 'wasp/server'\n\nexport const onBeforeSignup = async ({ providerId, prisma, req }) => {\n  const count = await prisma.user.count()\n  console.log('number of users before', count)\n  console.log('provider name', providerId.providerName)\n  console.log('provider user ID', providerId.providerUserId)\n\n  if (count > 100) {\n    throw new HttpError(403, 'Too many users')\n  }\n\n  if (\n    providerId.providerName === 'email' &&\n    providerId.providerUserId === 'some@email.com'\n  ) {\n    throw new HttpError(403, 'This email is not allowed')\n  }\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onBeforeSignup: import { onBeforeSignup } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import { HttpError } from 'wasp/server'\nimport type { OnBeforeSignupHook } from 'wasp/server/auth'\n\nexport const onBeforeSignup: OnBeforeSignupHook = async ({\n  providerId,\n  prisma,\n  req,\n}) => {\n  const count = await prisma.user.count()\n  console.log('number of users before', count)\n  console.log('provider name', providerId.providerName)\n  console.log('provider user ID', providerId.providerUserId)\n\n  if (count > 100) {\n    throw new HttpError(403, 'Too many users')\n  }\n\n  if (\n    providerId.providerName === 'email' &&\n    providerId.providerUserId === 'some@email.com'\n  ) {\n    throw new HttpError(403, 'This email is not allowed')\n  }\n}\n")))),(0,a.kt)("p",null,"Read more about the data the ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeSignup")," hook receives in the ",(0,a.kt)("a",{parentName:"p",href:"#the-onbeforesignup-hook"},"API Reference"),"."),(0,a.kt)("h3",{id:"executing-code-after-the-user-signs-up"},"Executing code after the user signs up"),(0,a.kt)("p",null,"Wasp calls the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterSignup")," hook after the user is created."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterSignup")," hook can be useful if you want to send the user a welcome email or perform some other action after the user signs up like syncing the user with a third-party service."),(0,a.kt)("p",null,"Since the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterSignup")," hook receives the OAuth tokens, you can use this hook to store the OAuth access token and/or ",(0,a.kt)("a",{parentName:"p",href:"#refreshing-the-oauth-access-token"},"refresh token")," in your database."),(0,a.kt)("p",null,"Works with ",(0,a.kt)(i.ge,{mdxType:"EmailPill"})," ",(0,a.kt)(i.f3,{mdxType:"UsernameAndPasswordPill"})," ",(0,a.kt)(i.Nl,{mdxType:"DiscordPill"})," ",(0,a.kt)(i.xS,{mdxType:"GithubPill"})," ",(0,a.kt)(i.p5,{mdxType:"GooglePill"})," ",(0,a.kt)(i.xQ,{mdxType:"KeycloakPill"})),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onAfterSignup: import { onAfterSignup } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"export const onAfterSignup = async ({\n  providerId,\n  user,\n  oauth,\n  prisma,\n  req,\n}) => {\n  const count = await prisma.user.count()\n  console.log('number of users after', count)\n  console.log('user object', user)\n\n  // If this is an OAuth signup, you have access to the OAuth tokens and the uniqueRequestId\n  if (oauth) {\n    console.log('accessToken', oauth.tokens.accessToken)\n    console.log('uniqueRequestId', oauth.uniqueRequestId)\n\n    const id = oauth.uniqueRequestId\n    const data = someKindOfStore.get(id)\n    if (data) {\n      console.log('saved data for the ID', data)\n    }\n    someKindOfStore.delete(id)\n  }\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onAfterSignup: import { onAfterSignup } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import type { OnAfterSignupHook } from 'wasp/server/auth'\n\nexport const onAfterSignup: OnAfterSignupHook = async ({\n  providerId,\n  user,\n  oauth,\n  prisma,\n  req,\n}) => {\n  const count = await prisma.user.count()\n  console.log('number of users after', count)\n  console.log('user object', user)\n\n  // If this is an OAuth signup, you have access to the OAuth tokens and the uniqueRequestId\n  if (oauth) {\n    console.log('accessToken', oauth.tokens.accessToken)\n    console.log('uniqueRequestId', oauth.uniqueRequestId)\n\n    const id = oauth.uniqueRequestId\n    const data = someKindOfStore.get(id)\n    if (data) {\n      console.log('saved data for the ID', data)\n    }\n    someKindOfStore.delete(id)\n  }\n}\n")))),(0,a.kt)("p",null,"Read more about the data the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterSignup")," hook receives in the ",(0,a.kt)("a",{parentName:"p",href:"#the-onaftersignup-hook"},"API Reference"),"."),(0,a.kt)("h3",{id:"executing-code-before-the-oauth-redirect"},"Executing code before the OAuth redirect"),(0,a.kt)("p",null,"Wasp calls the ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeOAuthRedirect")," hook after the OAuth redirect URL is generated but before redirecting the user. This hook can access the request object sent from the client at the start of the OAuth process."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeOAuthRedirect")," hook can be useful if you want to save some data (e.g. request query parameters) that you can use later in the OAuth flow. You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"uniqueRequestId")," parameter to reference this data later in the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterSignup")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterLogin")," hooks."),(0,a.kt)("p",null,"Works with ",(0,a.kt)(i.Nl,{mdxType:"DiscordPill"})," ",(0,a.kt)(i.xS,{mdxType:"GithubPill"})," ",(0,a.kt)(i.p5,{mdxType:"GooglePill"})," ",(0,a.kt)(i.xQ,{mdxType:"KeycloakPill"})),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onBeforeOAuthRedirect: import { onBeforeOAuthRedirect } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"export const onBeforeOAuthRedirect = async ({ url, oauth, prisma, req }) => {\n  console.log('query params before oAuth redirect', req.query)\n\n  // Saving query params for later use in onAfterSignup or onAfterLogin hooks\n  const id = oauth.uniqueRequestId\n  someKindOfStore.set(id, req.query)\n\n  return { url }\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onBeforeOAuthRedirect: import { onBeforeOAuthRedirect } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import type { OnBeforeOAuthRedirectHook } from 'wasp/server/auth'\n\nexport const onBeforeOAuthRedirect: OnBeforeOAuthRedirectHook = async ({\n  url,\n  oauth,\n  prisma,\n  req,\n}) => {\n  console.log('query params before oAuth redirect', req.query)\n\n  // Saving query params for later use in onAfterSignup or onAfterLogin hooks\n  const id = oauth.uniqueRequestId\n  someKindOfStore.set(id, req.query)\n\n  return { url }\n}\n")))),(0,a.kt)("p",null,"This hook's return value must be an object that looks like this: ",(0,a.kt)("inlineCode",{parentName:"p"},"{ url: URL }"),". Wasp uses the URL to redirect the user to the OAuth provider."),(0,a.kt)("p",null,"Read more about the data the ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeOAuthRedirect")," hook receives in the ",(0,a.kt)("a",{parentName:"p",href:"#the-onbeforeoauthredirect-hook"},"API Reference"),"."),(0,a.kt)("h3",{id:"executing-code-before-the-user-logs-in"},"Executing code before the user logs in"),(0,a.kt)("p",null,"Wasp calls the ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeLogin")," hook before the user is logged in."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeLogin")," hook can be useful if you want to reject a user based on some criteria before they log in."),(0,a.kt)("p",null,"Works with ",(0,a.kt)(i.ge,{mdxType:"EmailPill"})," ",(0,a.kt)(i.f3,{mdxType:"UsernameAndPasswordPill"})," ",(0,a.kt)(i.Nl,{mdxType:"DiscordPill"})," ",(0,a.kt)(i.xS,{mdxType:"GithubPill"})," ",(0,a.kt)(i.p5,{mdxType:"GooglePill"})," ",(0,a.kt)(i.xQ,{mdxType:"KeycloakPill"})),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onBeforeLogin: import { onBeforeLogin } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"import { HttpError } from 'wasp/server'\n\nexport const onBeforeLogin = async ({ providerId, user, prisma, req }) => {\n  if (\n    providerId.providerName === 'email' &&\n    providerId.providerUserId === 'some@email.com'\n  ) {\n    throw new HttpError(403, 'You cannot log in with this email')\n  }\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onBeforeLogin: import { onBeforeLogin } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import { HttpError } from 'wasp/server'\nimport type { OnBeforeLoginHook } from 'wasp/server/auth'\n\nexport const onBeforeLogin: OnBeforeLoginHook = async ({\n  providerId,\n  user,\n  prisma,\n  req,\n}) => {\n  if (\n    providerId.providerName === 'email' &&\n    providerId.providerUserId === 'some@email.com'\n  ) {\n    throw new HttpError(403, 'You cannot log in with this email')\n  }\n}\n")))),(0,a.kt)("p",null,"Read more about the data the ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeLogin")," hook receives in the ",(0,a.kt)("a",{parentName:"p",href:"#the-onbeforelogin-hook"},"API Reference"),"."),(0,a.kt)("h3",{id:"executing-code-after-the-user-logs-in"},"Executing code after the user logs in"),(0,a.kt)("p",null,"Wasp calls the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterLogin")," hook after the user logs in."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterLogin")," hook can be useful if you want to perform some action after the user logs in, like syncing the user with a third-party service."),(0,a.kt)("p",null,"Since the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterLogin")," hook receives the OAuth tokens, you can use it to update the OAuth access token for the user in your database. You can also use it to ",(0,a.kt)("a",{parentName:"p",href:"#refreshing-the-oauth-access-token"},"refresh the OAuth access token")," if the provider supports it."),(0,a.kt)("p",null,"Works with ",(0,a.kt)(i.ge,{mdxType:"EmailPill"})," ",(0,a.kt)(i.f3,{mdxType:"UsernameAndPasswordPill"})," ",(0,a.kt)(i.Nl,{mdxType:"DiscordPill"})," ",(0,a.kt)(i.xS,{mdxType:"GithubPill"})," ",(0,a.kt)(i.p5,{mdxType:"GooglePill"})," ",(0,a.kt)(i.xQ,{mdxType:"KeycloakPill"})),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onAfterLogin: import { onAfterLogin } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"export const onAfterLogin = async ({\n  providerId,\n  user,\n  oauth,\n  prisma,\n  req,\n}) => {\n  console.log('user object', user)\n\n  // If this is an OAuth signup, you have access to the OAuth tokens and the uniqueRequestId\n  if (oauth) {\n    console.log('accessToken', oauth.tokens.accessToken)\n    console.log('uniqueRequestId', oauth.uniqueRequestId)\n\n    const id = oauth.uniqueRequestId\n    const data = someKindOfStore.get(id)\n    if (data) {\n      console.log('saved data for the ID', data)\n    }\n    someKindOfStore.delete(id)\n  }\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  ...\n  auth: {\n    ...\n    onAfterLogin: import { onAfterLogin } from "@src/auth/hooks",\n  },\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import type { OnAfterLoginHook } from 'wasp/server/auth'\n\nexport const onAfterLogin: OnAfterLoginHook = async ({\n  providerId,\n  user,\n  oauth,\n  prisma,\n  req,\n}) => {\n  console.log('user object', user)\n\n  // If this is an OAuth signup, you have access to the OAuth tokens and the uniqueRequestId\n  if (oauth) {\n    console.log('accessToken', oauth.tokens.accessToken)\n    console.log('uniqueRequestId', oauth.uniqueRequestId)\n\n    const id = oauth.uniqueRequestId\n    const data = someKindOfStore.get(id)\n    if (data) {\n      console.log('saved data for the ID', data)\n    }\n    someKindOfStore.delete(id)\n  }\n}\n")))),(0,a.kt)("p",null,"Read more about the data the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterLogin")," hook receives in the ",(0,a.kt)("a",{parentName:"p",href:"#the-onafterlogin-hook"},"API Reference"),"."),(0,a.kt)("h3",{id:"refreshing-the-oauth-access-token"},"Refreshing the OAuth access token"),(0,a.kt)("p",null,"Some OAuth providers support refreshing the access token when it expires. To refresh the access token, you need the OAuth ",(0,a.kt)("strong",{parentName:"p"},"refresh token"),"."),(0,a.kt)("p",null,"Wasp exposes the OAuth refresh token in the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterSignup")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterLogin")," hooks. You can store the refresh token in your database and use it to refresh the access token when it expires."),(0,a.kt)("p",null,"Import the provider object with the OAuth client from the ",(0,a.kt)("inlineCode",{parentName:"p"},"wasp/server/oauth")," module. For example, to refresh the Google OAuth access token, import the ",(0,a.kt)("inlineCode",{parentName:"p"},"google")," object from the ",(0,a.kt)("inlineCode",{parentName:"p"},"wasp/server/oauth")," module. You use the ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshAccessToken")," method of the OAuth client to refresh the access token."),(0,a.kt)("p",null,"Here's an example of how you can refresh the access token for Google OAuth:"),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"import { google } from 'wasp/server/oauth'\n\nexport const onAfterLogin = async ({ oauth }) => {\n  if (oauth.provider === 'google' && oauth.tokens.refreshToken !== null) {\n    const newTokens = await google.oAuthClient.refreshAccessToken(\n      oauth.tokens.refreshToken\n    )\n    log('new tokens', newTokens)\n  }\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import type { OnAfterLoginHook } from 'wasp/server/auth'\nimport { google } from 'wasp/server/oauth'\n\nexport const onAfterLogin: OnAfterLoginHook = async ({ oauth }) => {\n  if (oauth.provider === 'google' && oauth.tokens.refreshToken !== null) {\n    const newTokens = await google.oAuthClient.refreshAccessToken(\n      oauth.tokens.refreshToken\n    )\n    log('new tokens', newTokens)\n  }\n}\n")))),(0,a.kt)("p",null,"Google exposes the ",(0,a.kt)("inlineCode",{parentName:"p"},"accessTokenExpiresAt")," field in the ",(0,a.kt)("inlineCode",{parentName:"p"},"oauth.tokens")," object. You can use this field to determine when the access token expires."),(0,a.kt)("p",null,"If you want to refresh the token periodically, use a ",(0,a.kt)("a",{parentName:"p",href:"/docs/advanced/jobs"},"Wasp Job"),"."),(0,a.kt)("h2",{id:"api-reference"},"API Reference"),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp"},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  auth: {\n    userEntity: User,\n    methods: {\n      ...\n    },\n    onBeforeSignup: import { onBeforeSignup } from "@src/auth/hooks",\n    onAfterSignup: import { onAfterSignup } from "@src/auth/hooks",\n    onBeforeOAuthRedirect: import { onBeforeOAuthRedirect } from "@src/auth/hooks",\n    onBeforeLogin: import { onBeforeLogin } from "@src/auth/hooks",\n    onAfterLogin: import { onAfterLogin } from "@src/auth/hooks",\n  },\n}\n'))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-wasp"},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  auth: {\n    userEntity: User,\n    methods: {\n      ...\n    },\n    onBeforeSignup: import { onBeforeSignup } from "@src/auth/hooks",\n    onAfterSignup: import { onAfterSignup } from "@src/auth/hooks",\n    onBeforeOAuthRedirect: import { onBeforeOAuthRedirect } from "@src/auth/hooks",\n    onBeforeLogin: import { onBeforeLogin } from "@src/auth/hooks",\n    onAfterLogin: import { onAfterLogin } from "@src/auth/hooks",\n  },\n}\n')))),(0,a.kt)("h3",{id:"common-hook-input"},"Common hook input"),(0,a.kt)("p",null,"The following properties are available in all auth hooks:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"prisma: PrismaClient")),(0,a.kt)("p",{parentName:"li"},"The Prisma client instance which you can use to query your database.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"req: Request")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/en/api.html#req"},"Express request object")," from which you can access the request headers, cookies, etc."))),(0,a.kt)("h3",{id:"the-onbeforesignup-hook"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"onBeforeSignup")," hook"),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"export const onBeforeSignup = async ({ providerId, prisma, req }) => {\n  // Hook code goes here\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import type { OnBeforeSignupHook } from 'wasp/server/auth'\n\nexport const onBeforeSignup: OnBeforeSignupHook = async ({\n  providerId,\n  prisma,\n  req,\n}) => {\n  // Hook code goes here\n}\n")))),(0,a.kt)("p",null,"The hook receives an object as ",(0,a.kt)("strong",{parentName:"p"},"input")," with the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"#providerid-fields"},(0,a.kt)("inlineCode",{parentName:"a"},"providerId: ProviderId")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Plus the ",(0,a.kt)("a",{parentName:"p",href:"#common-hook-input"},"common hook input")))),(0,a.kt)("p",null,"Wasp ignores this hook's ",(0,a.kt)("strong",{parentName:"p"},"return value"),"."),(0,a.kt)("h3",{id:"the-onaftersignup-hook"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"onAfterSignup")," hook"),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"export const onAfterSignup = async ({\n  providerId,\n  user,\n  oauth,\n  prisma,\n  req,\n}) => {\n  // Hook code goes here\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import type { OnAfterSignupHook } from 'wasp/server/auth'\n\nexport const onAfterSignup: OnAfterSignupHook = async ({\n  providerId,\n  user,\n  oauth,\n  prisma,\n  req,\n}) => {\n  // Hook code goes here\n}\n")))),(0,a.kt)("p",null,"The hook receives an object as ",(0,a.kt)("strong",{parentName:"p"},"input")," with the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"#providerid-fields"},(0,a.kt)("inlineCode",{parentName:"a"},"providerId: ProviderId")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"user: User")),(0,a.kt)("p",{parentName:"li"},"The user object that was created.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"#oauth-fields"},(0,a.kt)("inlineCode",{parentName:"a"},"oauth?: OAuthFields")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Plus the ",(0,a.kt)("a",{parentName:"p",href:"#common-hook-input"},"common hook input")))),(0,a.kt)("p",null,"Wasp ignores this hook's ",(0,a.kt)("strong",{parentName:"p"},"return value"),"."),(0,a.kt)("h3",{id:"the-onbeforeoauthredirect-hook"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"onBeforeOAuthRedirect")," hook"),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"export const onBeforeOAuthRedirect = async ({ url, oauth, prisma, req }) => {\n  // Hook code goes here\n\n  return { url }\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import type { OnBeforeOAuthRedirectHook } from 'wasp/server/auth'\n\nexport const onBeforeOAuthRedirect: OnBeforeOAuthRedirectHook = async ({\n  url,\n  oauth,\n  prisma,\n  req,\n}) => {\n  // Hook code goes here\n\n  return { url }\n}\n")))),(0,a.kt)("p",null,"The hook receives an object as ",(0,a.kt)("strong",{parentName:"p"},"input")," with the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"url: URL")),(0,a.kt)("p",{parentName:"li"},"Wasp uses the URL for the OAuth redirect.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"oauth: { uniqueRequestId: string }")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"oauth")," object has the following fields:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"uniqueRequestId: string")),(0,a.kt)("p",{parentName:"li"},"The unique request ID for the OAuth flow (you might know it as the ",(0,a.kt)("inlineCode",{parentName:"p"},"state")," parameter in OAuth.)"),(0,a.kt)("p",{parentName:"li"},"You can use the unique request ID to save data (e.g. request query params) that you can later use in the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterSignup")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterLogin")," hooks.")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Plus the ",(0,a.kt)("a",{parentName:"p",href:"#common-hook-input"},"common hook input")))),(0,a.kt)("p",null,"This hook's return value must be an object that looks like this: ",(0,a.kt)("inlineCode",{parentName:"p"},"{ url: URL }"),". Wasp uses the URL to redirect the user to the OAuth provider."),(0,a.kt)("h3",{id:"the-onbeforelogin-hook"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"onBeforeLogin")," hook"),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"export const onBeforeLogin = async ({ providerId, prisma, req }) => {\n  // Hook code goes here\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import type { OnBeforeLoginHook } from 'wasp/server/auth'\n\nexport const onBeforeLogin: OnBeforeLoginHook = async ({\n  providerId,\n  prisma,\n  req,\n}) => {\n  // Hook code goes here\n}\n")))),(0,a.kt)("p",null,"The hook receives an object as ",(0,a.kt)("strong",{parentName:"p"},"input")," with the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"#providerid-fields"},(0,a.kt)("inlineCode",{parentName:"a"},"providerId: ProviderId")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"user: User")),(0,a.kt)("p",{parentName:"li"},"The user that is trying to log in.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Plus the ",(0,a.kt)("a",{parentName:"p",href:"#common-hook-input"},"common hook input")))),(0,a.kt)("p",null,"Wasp ignores this hook's ",(0,a.kt)("strong",{parentName:"p"},"return value"),"."),(0,a.kt)("h3",{id:"the-onafterlogin-hook"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"onAfterLogin")," hook"),(0,a.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/auth/hooks.js"',title:'"src/auth/hooks.js"'},"export const onAfterLogin = async ({\n  providerId,\n  user,\n  oauth,\n  prisma,\n  req,\n}) => {\n  // Hook code goes here\n}\n"))),(0,a.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth/hooks.ts"',title:'"src/auth/hooks.ts"'},"import type { OnAfterLoginHook } from 'wasp/server/auth'\n\nexport const onAfterLogin: OnAfterLoginHook = async ({\n  providerId,\n  user,\n  oauth,\n  prisma,\n  req,\n}) => {\n  // Hook code goes here\n}\n")))),(0,a.kt)("p",null,"The hook receives an object as ",(0,a.kt)("strong",{parentName:"p"},"input")," with the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"#providerid-fields"},(0,a.kt)("inlineCode",{parentName:"a"},"providerId: ProviderId")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"user: User")),(0,a.kt)("p",{parentName:"li"},"The logged-in user's object.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"#oauth-fields"},(0,a.kt)("inlineCode",{parentName:"a"},"oauth?: OAuthFields")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Plus the ",(0,a.kt)("a",{parentName:"p",href:"#common-hook-input"},"common hook input")))),(0,a.kt)("p",null,"Wasp ignores this hook's ",(0,a.kt)("strong",{parentName:"p"},"return value"),"."),(0,a.kt)("h3",{id:"providerid-fields"},"ProviderId fields"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"providerId")," object represents the user for the current authentication method. Wasp passes it to the ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeSignup"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterSignup"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeLogin"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterLogin")," hooks."),(0,a.kt)("p",null,"It has the following fields:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"providerName: string")),(0,a.kt)("p",{parentName:"li"},"The provider's name (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"'email'"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"'google'"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"'github"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"providerUserId: string")),(0,a.kt)("p",{parentName:"li"},"The user's unique ID in the provider's system (e.g. email, Google ID, GitHub ID)"))),(0,a.kt)("h3",{id:"oauth-fields"},"OAuth fields"),(0,a.kt)("p",null,"Wasp passes the ",(0,a.kt)("inlineCode",{parentName:"p"},"oauth")," object to the ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterSignup")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"onAfterLogin")," hooks only when the user is authenticated with ",(0,a.kt)("a",{parentName:"p",href:"/docs/auth/social-auth/overview"},"Social Auth"),"."),(0,a.kt)("p",null,"It has the following fields:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"providerName: string")),(0,a.kt)("p",{parentName:"li"},"The name of the OAuth provider the user authenticated with (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"'google'"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"'github'"),").")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"tokens: Tokens")),(0,a.kt)("p",{parentName:"li"},"You can use the OAuth tokens to make requests to the provider's API on the user's behalf."),(0,a.kt)("p",{parentName:"li"},"Depending on the OAuth provider, the ",(0,a.kt)("inlineCode",{parentName:"p"},"tokens")," object might have different fields. For example, Google has the fields ",(0,a.kt)("inlineCode",{parentName:"p"},"accessToken"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshToken"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"idToken"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"accessTokenExpiresAt"),"."),(0,a.kt)(u.A,{mdxType:"ShowForTs"},(0,a.kt)("p",{parentName:"li"},"To access the provider-specific fields, you must first narrow down the ",(0,a.kt)("inlineCode",{parentName:"p"},"oauth.tokens")," object type to the specific OAuth provider type."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"if (oauth && oauth.providerName === 'google') {\n  console.log(oauth.tokens.accessToken)\n  //                  ^ Google specific tokens are available here\n  console.log(oauth.tokens.refreshToken)\n  console.log(oauth.tokens.idToken)\n  console.log(oauth.tokens.accessTokenExpiresAt)\n}\n")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"uniqueRequestId: string")),(0,a.kt)("p",{parentName:"li"},"The unique request ID for the OAuth flow (you might know it as the ",(0,a.kt)("inlineCode",{parentName:"p"},"state")," parameter in OAuth.)"),(0,a.kt)("p",{parentName:"li"},"You can use the unique request ID to get the data that was saved in the ",(0,a.kt)("inlineCode",{parentName:"p"},"onBeforeOAuthRedirect")," hook."))))}f.isMDXComponent=!0}}]);