"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[76781],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(86010);const i={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,s),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(87462),r=n(67294),i=n(86010),s=n(12466),o=n(16550),l=n(91980),p=n(67392),u=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function c(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=c(e),[s,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[l,p]=h({queryString:n,groupId:a}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),f=(()=>{const e=l??d;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),g(e)}),[p,g,i]),tabValues:i}}var f=n(72389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:o,selectValue:l,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),c=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==o&&(d(t),l(a))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:c},s,{className:(0,i.Z)("tabs__item",k.tabItem,s?.className,{"tabs__item--active":o===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function b(e){const t=g(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",k.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,f.Z)();return r.createElement(b,(0,a.Z)({key:String(t)},e))}},46300:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(50012);function i(e){let{path:t}=e;const[n]=(0,r.Nk)("docusaurus.tab.js-ts"),i=t.lastIndexOf("{"),s=t.slice(i+1,t.length-1),[o,l]=s.split(","),p=t.slice(0,i);return a.createElement("code",null,p+("js"===n?o:l))}},36039:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));n(46300);const i={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("small",null,(0,r.kt)("p",null,"Read more about accessing the user data in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/auth/entities/#accessing-the-auth-fields"},"Accessing User Data")," section of the docs.")))}o.isMDXComponent=!0},13850:(e,t,n)=>{n.d(t,{ZP:()=>p});var a=n(87462),r=(n(67294),n(3905)),i=(n(46300),n(85162)),s=n(74866);const o={toc:[]},l="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(l,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"userSignupFields")," defines all the extra fields that need to be set on the ",(0,r.kt)("inlineCode",{parentName:"p"},"User")," during the sign-up process. For example, if you have ",(0,r.kt)("inlineCode",{parentName:"p"},"address")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"phone")," fields on your ",(0,r.kt)("inlineCode",{parentName:"p"},"User")," entity, you can set them by defining the ",(0,r.kt)("inlineCode",{parentName:"p"},"userSignupFields")," like this:"),(0,r.kt)(s.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth.js"',title:'"src/auth.js"'},"import { defineUserSignupFields } from 'wasp/server/auth'\n\nexport const userSignupFields = defineUserSignupFields({\n  address: (data) => {\n    if (!data.address) {\n      throw new Error('Address is required')\n    }\n    return data.address\n  }\n  phone: (data) => data.phone,\n})\n"))),(0,r.kt)(i.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/auth.ts"',title:'"src/auth.ts"'},"import { defineUserSignupFields } from 'wasp/server/auth'\n\nexport const userSignupFields = defineUserSignupFields({\n  address: (data) => {\n    if (!data.address) {\n      throw new Error('Address is required')\n    }\n    return data.address\n  }\n  phone: (data) => data.phone,\n})\n")))))}p.isMDXComponent=!0},8095:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));n(46300);const i={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const discordIdentity = user.identities.discord\n\n// Discord User ID for example "80351110224678912"\ndiscordIdentity.id\n')))}o.isMDXComponent=!0},16886:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));n(46300);const i={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Provider-specific behavior comes down to implementing two functions."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"configFn")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"userSignupFields"))),(0,r.kt)("p",null,"The reference shows how to define both."),(0,r.kt)("p",null,"For behavior common to all providers, check the general ",(0,r.kt)("a",{parentName:"p",href:"/docs/auth/overview#api-reference"},"API Reference"),"."))}o.isMDXComponent=!0},94159:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));n(46300);const i={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When a user ",(0,r.kt)("strong",{parentName:"p"},"signs in for the first time"),", Wasp creates a new user account and links it to the chosen auth provider account for future logins."))}o.isMDXComponent=!0},28047:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));n(46300);const i={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Wasp automatically generates the ",(0,r.kt)("inlineCode",{parentName:"p"},"defineUserSignupFields")," function to help you correctly type your ",(0,r.kt)("inlineCode",{parentName:"p"},"userSignupFields")," object."))}o.isMDXComponent=!0},93338:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));n(46300);const i={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When a user logs in using a social login provider, the backend receives some data about the user.\nWasp lets you access this data inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"userSignupFields")," getters."),(0,r.kt)("p",null,"For example, the User entity can include a ",(0,r.kt)("inlineCode",{parentName:"p"},"displayName")," field which you can set based on the details received from the provider."),(0,r.kt)("p",null,"Wasp also lets you customize the configuration of the providers' settings using the ",(0,r.kt)("inlineCode",{parentName:"p"},"configFn")," function."),(0,r.kt)("p",null,"Let's use this example to show both fields in action:"))}o.isMDXComponent=!0},23889:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));n(46300);const i={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"By default, Wasp doesn't store any information it receives from the social login provider. It only stores the user's ID specific to the provider."),(0,r.kt)("p",null,"There are two mechanisms used for overriding the default behavior:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"userSignupFields")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"configFn"))),(0,r.kt)("p",null,"Let's explore them in more detail."))}o.isMDXComponent=!0},35622:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));n(46300);const i={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To read more about how to set up the logout button and get access to the logged-in user in both client and server code, read the docs on ",(0,r.kt)("a",{parentName:"p",href:"../../auth/overview"},"using auth"),"."))}o.isMDXComponent=!0},32922:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));n(46300);const i={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Here's a skeleton of how our ",(0,r.kt)("inlineCode",{parentName:"p"},"main.wasp")," should look like after we're done:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},"// Configuring the social authentication\napp myApp {\n  auth: { ... }\n}\n\n// Defining routes and pages\nroute LoginRoute { ... }\npage LoginPage { ... }\n")))}o.isMDXComponent=!0},27338:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>N,contentTitle:()=>b,default:()=>C,frontMatter:()=>v,metadata:()=>w,toc:()=>x});var a=n(87462),r=(n(67294),n(3905)),i=n(46300),s=n(85162),o=n(74866),l=n(44996),p=n(94159),u=n(23889),d=n(93338),c=n(35622),m=n(32922),h=n(28047),g=n(16886),f=n(13850),k=n(8095),y=n(36039);const v={title:"Discord"},b=void 0,w={unversionedId:"auth/social-auth/discord",id:"version-0.14.0/auth/social-auth/discord",title:"Discord",description:"Wasp supports Discord Authentication out of the box.",source:"@site/versioned_docs/version-0.14.0/auth/social-auth/discord.md",sourceDirName:"auth/social-auth",slug:"/auth/social-auth/discord",permalink:"/docs/auth/social-auth/discord",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/release/web/versioned_docs/version-0.14.0/auth/social-auth/discord.md",tags:[],version:"0.14.0",frontMatter:{title:"Discord"},sidebar:"docs",previous:{title:"Keycloak",permalink:"/docs/auth/social-auth/keycloak"},next:{title:"Accessing User Data",permalink:"/docs/auth/entities/"}},N={},x=[{value:"Setting up Discord Auth",id:"setting-up-discord-auth",level:2},{value:"1. Adding Discord Auth to Your Wasp File",id:"1-adding-discord-auth-to-your-wasp-file",level:3},{value:"2. Add the User Entity",id:"2-add-the-user-entity",level:3},{value:"3. Creating a Discord App",id:"3-creating-a-discord-app",level:3},{value:"4. Adding Environment Variables",id:"4-adding-environment-variables",level:3},{value:"5. Adding the Necessary Routes and Pages",id:"5-adding-the-necessary-routes-and-pages",level:3},{value:"6. Creating the Client Pages",id:"6-creating-the-client-pages",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"Default Behaviour",id:"default-behaviour",level:2},{value:"Overrides",id:"overrides",level:2},{value:"Data Received From Discord",id:"data-received-from-discord",level:3},{value:"Using the Data Received From Discord",id:"using-the-data-received-from-discord",level:3},{value:"Using Auth",id:"using-auth",level:2},{value:"API Reference",id:"api-reference",level:2}],T={toc:x},D="wrapper";function C(e){let{components:t,...v}=e;return(0,r.kt)(D,(0,a.Z)({},T,v,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Wasp supports Discord Authentication out of the box."),(0,r.kt)("p",null,"Letting your users log in using their Discord accounts turns the signup process into a breeze."),(0,r.kt)("p",null,"Let's walk through enabling Discord Authentication, explain some of the default settings, and show how to override them."),(0,r.kt)("h2",{id:"setting-up-discord-auth"},"Setting up Discord Auth"),(0,r.kt)("p",null,"Enabling Discord Authentication comes down to a series of steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Enabling Discord authentication in the Wasp file."),(0,r.kt)("li",{parentName:"ol"},"Adding the ",(0,r.kt)("inlineCode",{parentName:"li"},"User")," entity."),(0,r.kt)("li",{parentName:"ol"},"Creating a Discord App."),(0,r.kt)("li",{parentName:"ol"},"Adding the necessary Routes and Pages"),(0,r.kt)("li",{parentName:"ol"},"Using Auth UI components in our Pages.")),(0,r.kt)(m.ZP,{mdxType:"WaspFileStructureNote"}),(0,r.kt)("h3",{id:"1-adding-discord-auth-to-your-wasp-file"},"1. Adding Discord Auth to Your Wasp File"),(0,r.kt)("p",null,"Let's start by properly configuring the Auth object:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  title: "My App",\n  auth: {\n    // highlight-next-line\n    // 1. Specify the User entity  (we\'ll define it next)\n    // highlight-next-line\n    userEntity: User,\n    methods: {\n      // highlight-next-line\n      // 2. Enable Discord Auth\n      // highlight-next-line\n      discord: {}\n    },\n    onAuthFailedRedirectTo: "/login"\n  },\n}\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  title: "My App",\n  auth: {\n    // highlight-next-line\n    // 1. Specify the User entity  (we\'ll define it next)\n    // highlight-next-line\n    userEntity: User,\n    methods: {\n      // highlight-next-line\n      // 2. Enable Discord Auth\n      // highlight-next-line\n      discord: {}\n    },\n    onAuthFailedRedirectTo: "/login"\n  },\n}\n')))),(0,r.kt)("h3",{id:"2-add-the-user-entity"},"2. Add the User Entity"),(0,r.kt)("p",null,"Let's now define the ",(0,r.kt)("inlineCode",{parentName:"p"},"app.auth.userEntity")," entity in the ",(0,r.kt)("inlineCode",{parentName:"p"},"schema.prisma")," file:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-prisma",metastring:'title="schema.prisma"',title:'"schema.prisma"'},"// 3. Define the user entity\nmodel User {\n  // highlight-next-line\n  id Int @id @default(autoincrement())\n  // Add your own fields below\n  // ...\n}\n"))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-prisma",metastring:'title="schema.prisma"',title:'"schema.prisma"'},"// 3. Define the user entity\nmodel User {\n  // highlight-next-line\n  id Int @id @default(autoincrement())\n  // Add your own fields below\n  // ...\n}\n")))),(0,r.kt)("h3",{id:"3-creating-a-discord-app"},"3. Creating a Discord App"),(0,r.kt)("p",null,"To use Discord as an authentication method, you'll first need to create a Discord App and provide Wasp with your client key and secret. Here's how you do it:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Log into your Discord account and navigate to: ",(0,r.kt)("a",{parentName:"li",href:"https://discord.com/developers/applications"},"https://discord.com/developers/applications"),"."),(0,r.kt)("li",{parentName:"ol"},"Select ",(0,r.kt)("strong",{parentName:"li"},"New Application"),"."),(0,r.kt)("li",{parentName:"ol"},"Supply required information.")),(0,r.kt)("img",{alt:"Discord Applications Screenshot",src:(0,l.Z)("img/integrations-discord-1.png"),width:"400px"}),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Go to the ",(0,r.kt)("strong",{parentName:"li"},"OAuth2")," tab on the sidebar and click ",(0,r.kt)("strong",{parentName:"li"},"Add Redirect"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For development, put: ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:3001/auth/discord/callback"),"."),(0,r.kt)("li",{parentName:"ul"},"Once you know on which URL your API server will be deployed, you can create a new app with that URL instead e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"https://your-server-url.com/auth/discord/callback"),".")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Hit ",(0,r.kt)("strong",{parentName:"li"},"Save Changes"),"."),(0,r.kt)("li",{parentName:"ol"},"Hit ",(0,r.kt)("strong",{parentName:"li"},"Reset Secret"),"."),(0,r.kt)("li",{parentName:"ol"},"Copy your Client ID and Client secret as you'll need them in the next step.")),(0,r.kt)("h3",{id:"4-adding-environment-variables"},"4. Adding Environment Variables"),(0,r.kt)("p",null,"Add these environment variables to the ",(0,r.kt)("inlineCode",{parentName:"p"},".env.server")," file at the root of your project (take their values from the previous step):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".env.server"',title:'".env.server"'},"DISCORD_CLIENT_ID=your-discord-client-id\nDISCORD_CLIENT_SECRET=your-discord-client-secret\n")),(0,r.kt)("h3",{id:"5-adding-the-necessary-routes-and-pages"},"5. Adding the Necessary Routes and Pages"),(0,r.kt)("p",null,"Let's define the necessary authentication Routes and Pages."),(0,r.kt)("p",null,"Add the following code to your ",(0,r.kt)("inlineCode",{parentName:"p"},"main.wasp")," file:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'// ...\n\nroute LoginRoute { path: "/login", to: LoginPage }\npage LoginPage {\n  component: import { Login } from "@src/pages/auth.jsx"\n}\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'// ...\n\nroute LoginRoute { path: "/login", to: LoginPage }\npage LoginPage {\n  component: import { Login } from "@src/pages/auth.tsx"\n}\n')))),(0,r.kt)("p",null,"We'll define the React components for these pages in the ",(0,r.kt)(i.Z,{path:"src/pages/auth.{jsx,tsx}",mdxType:"FileExtSwitcher"})," file below."),(0,r.kt)("h3",{id:"6-creating-the-client-pages"},"6. Creating the Client Pages"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"We are using ",(0,r.kt)("a",{parentName:"p",href:"https://tailwindcss.com/"},"Tailwind CSS")," to style the pages. Read more about how to add it ",(0,r.kt)("a",{parentName:"p",href:"../../project/css-frameworks"},"here"),".")),(0,r.kt)("p",null,"Let's create a ",(0,r.kt)(i.Z,{path:"auth.{jsx,tsx}",mdxType:"FileExtSwitcher"})," file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/pages")," folder and add the following to it:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/pages/auth.jsx"',title:'"src/pages/auth.jsx"'},'import { LoginForm } from \'wasp/client/auth\'\n\nexport function Login() {\n  return (\n    <Layout>\n      <LoginForm />\n    </Layout>\n  )\n}\n\n// A layout component to center the content\nexport function Layout({ children }) {\n  return (\n    <div className="w-full h-full bg-white">\n      <div className="min-w-full min-h-[75vh] flex items-center justify-center">\n        <div className="w-full h-full max-w-sm p-5 bg-white">\n          <div>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/pages/auth.tsx"',title:'"src/pages/auth.tsx"'},'import { LoginForm } from \'wasp/client/auth\'\n\nexport function Login() {\n  return (\n    <Layout>\n      <LoginForm />\n    </Layout>\n  )\n}\n\n// A layout component to center the content\nexport function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className="w-full h-full bg-white">\n      <div className="min-w-full min-h-[75vh] flex items-center justify-center">\n        <div className="w-full h-full max-w-sm p-5 bg-white">\n          <div>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n')))),(0,r.kt)("p",null,"We imported the generated Auth UI components and used them in our pages. Read more about the Auth UI components ",(0,r.kt)("a",{parentName:"p",href:"../../auth/ui"},"here"),"."),(0,r.kt)("h3",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"Yay, we've successfully set up Discord Auth! \ud83c\udf89"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Discord Auth",src:n(37247).Z,width:"1068",height:"699"})),(0,r.kt)("p",null,"Running ",(0,r.kt)("inlineCode",{parentName:"p"},"wasp db migrate-dev")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"wasp start")," should now give you a working app with authentication.\nTo see how to protect specific pages (i.e., hide them from non-authenticated users), read the docs on ",(0,r.kt)("a",{parentName:"p",href:"../../auth/overview"},"using auth"),"."),(0,r.kt)("h2",{id:"default-behaviour"},"Default Behaviour"),(0,r.kt)("p",null,"Add ",(0,r.kt)("inlineCode",{parentName:"p"},"discord: {}")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"auth.methods")," dictionary to use it with default settings."),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:"title=main.wasp",title:"main.wasp"},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      // highlight-next-line\n      discord: {}\n    },\n    onAuthFailedRedirectTo: "/login"\n  },\n}\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:"title=main.wasp",title:"main.wasp"},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      // highlight-next-line\n      discord: {}\n    },\n    onAuthFailedRedirectTo: "/login"\n  },\n}\n')))),(0,r.kt)(p.ZP,{mdxType:"DefaultBehaviour"}),(0,r.kt)("h2",{id:"overrides"},"Overrides"),(0,r.kt)(u.ZP,{mdxType:"OverrideIntro"}),(0,r.kt)("h3",{id:"data-received-from-discord"},"Data Received From Discord"),(0,r.kt)("p",null,"We are using Discord's API and its ",(0,r.kt)("inlineCode",{parentName:"p"},"/users/@me")," endpoint to get the user data."),(0,r.kt)("p",null,"The data we receive from Discord on the ",(0,r.kt)("inlineCode",{parentName:"p"},"/users/@me")," endpoint looks something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "80351110224678912",\n  "username": "Nelly",\n  "discriminator": "1337",\n  "avatar": "8342729096ea3675442027381ff50dfe",\n  "verified": true,\n  "flags": 64,\n  "banner": "06c16474723fe537c283b8efa61a30c8",\n  "accent_color": 16711680,\n  "premium_type": 1,\n  "public_flags": 64,\n  "avatar_decoration_data": {\n    "sku_id": "1144058844004233369",\n    "asset": "a_fed43ab12698df65902ba06727e20c0e"\n  }\n}\n')),(0,r.kt)("p",null,"The fields you receive will depend on the scopes you requested. The default scope is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"identify")," only. If you want to get the email, you need to specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"email")," scope in the ",(0,r.kt)("inlineCode",{parentName:"p"},"configFn")," function."),(0,r.kt)("small",null,(0,r.kt)("p",null,"For an up to date info about the data received from Discord, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://discord.com/developers/docs/resources/user#user-object-user-structure"},"Discord API documentation"),".")),(0,r.kt)("h3",{id:"using-the-data-received-from-discord"},"Using the Data Received From Discord"),(0,r.kt)(d.ZP,{mdxType:"OverrideExampleIntro"}),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      discord: {\n        // highlight-next-line\n        configFn: import { getConfig } from "@src/auth/discord.js",\n        // highlight-next-line\n        userSignupFields: import { userSignupFields } from "@src/auth/discord.js"\n      }\n    },\n    onAuthFailedRedirectTo: "/login"\n  },\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-prisma",metastring:'title="schema.prisma"',title:'"schema.prisma"'},"model User {\n  id          Int    @id @default(autoincrement())\n  username    String @unique\n  displayName String\n}\n\n// ...\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=src/auth/discord.js",title:"src/auth/discord.js"},"export const userSignupFields = {\n  username: (data) => data.profile.global_name,\n  avatarUrl: (data) => data.profile.avatar,\n};\n\nexport function getConfig() {\n  return {\n    scopes: ['identify'],\n  };\n}\n"))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      discord: {\n        // highlight-next-line\n        configFn: import { getConfig } from "@src/auth/discord.js",\n        // highlight-next-line\n        userSignupFields: import { userSignupFields } from "@src/auth/discord.js"\n      }\n    },\n    onAuthFailedRedirectTo: "/login"\n  },\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-prisma",metastring:'title="schema.prisma"',title:'"schema.prisma"'},"model User {\n  id          Int    @id @default(autoincrement())\n  username    String @unique\n  displayName String\n}\n\n// ...\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/auth/discord.ts",title:"src/auth/discord.ts"},"import { defineUserSignupFields } from 'wasp/server/auth'\n\nexport const userSignupFields = defineUserSignupFields({\n  username: (data: any) => data.profile.global_name,\n  avatarUrl: (data: any) => data.profile.avatar,\n})\n\nexport function getConfig() {\n  return {\n    scopes: ['identify'],\n  }\n}\n")),(0,r.kt)(h.ZP,{mdxType:"GetUserFieldsType"}))),(0,r.kt)("h2",{id:"using-auth"},"Using Auth"),(0,r.kt)(c.ZP,{mdxType:"UsingAuthNote"}),(0,r.kt)("p",null,"When you receive the ",(0,r.kt)("inlineCode",{parentName:"p"},"user")," object ",(0,r.kt)("a",{parentName:"p",href:"/docs/auth/overview#accessing-the-logged-in-user"},"on the client or the server"),", you'll be able to access the user's Discord ID like this:"),(0,r.kt)(k.ZP,{mdxType:"DiscordData"}),(0,r.kt)(y.ZP,{mdxType:"AccessingUserDataNote"}),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)(g.ZP,{mdxType:"ApiReferenceIntro"}),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      discord: {\n        // highlight-next-line\n        configFn: import { getConfig } from "@src/auth/discord.js",\n        // highlight-next-line\n        userSignupFields: import { userSignupFields } from "@src/auth/discord.js"\n      }\n    },\n    onAuthFailedRedirectTo: "/login"\n  },\n}\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.14.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      discord: {\n        // highlight-next-line\n        configFn: import { getConfig } from "@src/auth/discord.js",\n        // highlight-next-line\n        userSignupFields: import { userSignupFields } from "@src/auth/discord.js"\n      }\n    },\n    onAuthFailedRedirectTo: "/login"\n  },\n}\n')))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"discord")," dict has the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"configfn-extimport"},(0,r.kt)("inlineCode",{parentName:"h4"},"configFn: ExtImport")),(0,r.kt)("p",{parentName:"li"},"This function should return an object with the scopes for the OAuth provider."),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=src/auth/discord.js",title:"src/auth/discord.js"},"export function getConfig() {\n  return {\n    scopes: [],\n  }\n}\n"))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/auth/discord.ts",title:"src/auth/discord.ts"},"export function getConfig() {\n  return {\n    scopes: [],\n  }\n}\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"usersignupfields-extimport"},(0,r.kt)("inlineCode",{parentName:"h4"},"userSignupFields: ExtImport")),(0,r.kt)(f.ZP,{mdxType:"UserSignupFieldsExplainer"}),(0,r.kt)("p",{parentName:"li"},"Read more about the ",(0,r.kt)("inlineCode",{parentName:"p"},"userSignupFields")," function ",(0,r.kt)("a",{parentName:"p",href:"../overview#1-defining-extra-fields"},"here"),"."))))}C.isMDXComponent=!0},37247:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/discord-584bbfefb7948f2a3b73bb30adb0346c.png"}}]);